---
/**
 * Componente Navbar mejorado
 * Implementa navegación, selector de idioma y toggle de modo oscuro
 */
import Button from '../ui/Button.astro';
import T from '../ui/T.astro';
import { getI18n } from '../../i18n/utils';

const { lang, t } = getI18n(Astro.url);
---

<nav class="sticky top-0 z-50 bg-white dark:bg-gray-800 shadow-md print-hide">
  <div class="container mx-auto px-4 py-3">
    <div class="flex justify-between items-center">
      <!-- Logo/Name -->
      <a href="#" class="text-xl font-bold text-gray-800 dark:text-white">
        {t('nav.title')}
      </a>
      
      <!-- Navigation Links -->
      <div class="hidden md:flex space-x-6">
        <a href="#about" class="nav-link text-gray-800 dark:text-gray-200">
          {t('nav.about')}
        </a>
      
        <a href="#experience" class="nav-link text-gray-800 dark:text-gray-200">
          {t('nav.experience')}
        </a>
        <a href="#skills" class="nav-link text-gray-800 dark:text-gray-200">
          {t('nav.skills')}
        </a>
        <a href="#education" class="nav-link text-gray-800 dark:text-gray-200">
          {t('nav.education')}
        </a>
        <a href="#courses" class="nav-link text-gray-800 dark:text-gray-200">
          {t('nav.courses')}
        </a>
        <a href="#furtherInfo" class="nav-link text-gray-800 dark:text-gray-200">
          {t('nav.furtherInfo')}
        </a>
      </div>
      
      <!-- Language and Dark Mode Toggles -->
      <div class="flex items-center space-x-4">
        <!-- Language Switcher -->
        <div class="flex space-x-2">
          <button id="es-btn" class="language-btn w-8 h-8 rounded-md flex items-center justify-center text-sm font-medium bg-gray-100 dark:bg-gray-700 text-gray-800 dark:text-gray-200" data-lang="es">
            ES
          </button>
          <button id="en-btn" class="language-btn w-8 h-8 rounded-md flex items-center justify-center text-sm font-medium bg-gray-100 dark:bg-gray-700 text-gray-800 dark:text-gray-200" data-lang="en">
            EN
          </button>
          <button id="fr-btn" class="language-btn w-8 h-8 rounded-md flex items-center justify-center text-sm font-medium bg-gray-100 dark:bg-gray-700 text-gray-800 dark:text-gray-200" data-lang="fr">
            FR
          </button>
        </div>
        
        <!-- Dark Mode Toggle -->
        <button id="darkModeToggle" class="p-1 rounded-full hover:bg-gray-200 dark:hover:bg-gray-700 transition-colors text-gray-800 dark:text-gray-200">
          <svg id="moon-icon" class="w-6 h-6" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
            <path d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z"></path>
          </svg>
          <svg id="sun-icon" class="w-6 h-6 hidden" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
            <path fill-rule="evenodd" d="M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z" clip-rule="evenodd"></path>
          </svg>
        </button>
        
        <!-- Mobile Menu Button -->
        <button id="mobile-menu-btn" class="md:hidden p-1 rounded-full hover:bg-gray-200 dark:hover:bg-gray-700 transition-colors">
          <svg class="w-6 h-6" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
            <path fill-rule="evenodd" d="M3 5a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 10a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 15a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z" clip-rule="evenodd"></path>
          </svg>
        </button>
      </div>
    </div>
    
    <!-- Mobile Menu (Hidden by default) -->
    <div id="mobile-menu" class="hidden md:hidden mt-4 pb-2">
      <div class="flex flex-col space-y-3">
        <a href="#about" class="nav-link text-gray-800 dark:text-gray-200">
          {t('nav.about')}
        </a>
        <a href="#education" class="nav-link text-gray-800 dark:text-gray-200">
          {t('nav.education')}
        </a>
        <a href="#experience" class="nav-link text-gray-800 dark:text-gray-200">
          {t('nav.experience')}
        </a>
        <a href="#skills" class="nav-link text-gray-800 dark:text-gray-200">
          {t('nav.skills')}
        </a>
        <a href="#courses" class="nav-link text-gray-800 dark:text-gray-200">
          {t('nav.courses')}
        </a>
        <a href="#furtherInfo" class="nav-link text-gray-800 dark:text-gray-200">
          {t('nav.furtherInfo')}
        </a>
      </div>
    </div>
  </div>
</nav>

<style>
  .nav-link {
    transition-property: color, background-color, border-color, fill, stroke;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 150ms;
  }
  
  .nav-link:hover {
    color: var(--color-primary, #2563eb); /* hover:text-primary */
  }
  
  .dark .nav-link {
    color: #d1d5db; /* dark:text-gray-300 */
  }
  
  .dark .nav-link:hover {
    color: var(--color-primary-400, #60a5fa); /* dark:hover:text-primary-400 */
  }
</style>

<script>
  // Importar utilidades
  import { initTheme } from '../../utils/theme.js';
  import { initI18n } from '../../utils/i18n.js';
  
  // Inicializar cuando el DOM esté listo
  document.addEventListener('DOMContentLoaded', () => {
    // Inicializar tema
    initTheme();
    
    // Inicializar traducciones
    initI18n();
    
    // Inicializar menú móvil
    const mobileMenuBtn = document.getElementById('mobile-menu-btn');
    const mobileMenu = document.getElementById('mobile-menu');
    
    if (mobileMenuBtn && mobileMenu) {
      mobileMenuBtn.addEventListener('click', () => {
        mobileMenu.classList.toggle('hidden');
      });
      
      // Cerrar menú al hacer clic en un enlace
      document.querySelectorAll('.nav-link').forEach(link => {
        link.addEventListener('click', () => {
          if (!mobileMenu.classList.contains('hidden')) {
            mobileMenu.classList.add('hidden');
          }
        });
      });
    }
  });
</script>
