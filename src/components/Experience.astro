---
import "../styles/global.css";

interface Experience {
  id: string;
  company: string;
  position: string;
  period: string;
  responsibilities: string[];
  projects: string[];
  achievements: string[];
}

const experienceData: Experience[] = [
  {
    id: "exp1",
    company: "Notion",
    position: "Stagiaire en Design de produit",
    period: "6 mai 2024 - 30 août 2024",
    responsibilities: [
      "Responsable de la création et des évolutions de produits numériques",
      "Travaillé en étroite collaboration avec les équipes de design et de développement",
      "Contribué au processus de recherche utilisateurs"
    ],
    projects: [],
    achievements: []
  },
  {
    id: "exp2",
    company: "Club de design à l'université de Paris",
    position: "Responsable marketing",
    period: "10 janvier 2023 - 15 mai 2024",
    responsibilities: [
      "Chargée de faire connaître nos événements et nos initiatives",
      "Gérais notre présence sur les réseaux sociaux",
      "Créais du contenu visuel pour promouvoir nos activités"
    ],
    projects: [],
    achievements: []
  }
];
---

<section id="experience" class="bg-white dark:bg-gray-800 rounded-lg shadow-md p-6 mb-8">
  <h2 class="text-2xl font-bold mb-4 text-gray-900 dark:text-white" data-i18n="experience.title">Experiencia:</h2>
  
  <div class="h-1 w-24 bg-blue-600 dark:bg-blue-400 mb-6"></div>
  
  <div class="space-y-6">
    {experienceData.map((exp) => (
      <div class="experience-card">
        <div class="flex justify-between items-start">
          <div>
            <h3 class="text-xl font-semibold text-gray-800 dark:text-white">{exp.position}</h3>
            <p class="text-gray-600 dark:text-gray-300">{exp.company} • {exp.period}</p>
          </div>
          <button class="toggle-details p-1 focus:outline-none" data-target={exp.id}>
            <svg class="w-6 h-6 text-gray-500 dark:text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
            </svg>
          </button>
        </div>
        
        <div id={exp.id} class="details mt-4 hidden">
          {exp.responsibilities.length > 0 && (
            <div class="mb-3">
              <h4 class="font-medium text-gray-700 dark:text-gray-200 mb-2" data-i18n="experience.responsibilities">Responsabilidades:</h4>
              <ul class="list-disc list-inside text-gray-600 dark:text-gray-300 space-y-1">
                {exp.responsibilities.map((item) => (
                  <li>{item}</li>
                ))}
              </ul>
            </div>
          )}
          
          {exp.projects.length > 0 && (
            <div class="mb-3">
              <h4 class="font-medium text-gray-700 dark:text-gray-200 mb-2" data-i18n="experience.projects">Proyectos:</h4>
              <ul class="list-disc list-inside text-gray-600 dark:text-gray-300 space-y-1">
                {exp.projects.map((item) => (
                  <li>{item}</li>
                ))}
              </ul>
            </div>
          )}
          
          {exp.achievements.length > 0 && (
            <div>
              <h4 class="font-medium text-gray-700 dark:text-gray-200 mb-2" data-i18n="experience.achievements">Logros:</h4>
              <ul class="list-disc list-inside text-gray-600 dark:text-gray-300 space-y-1">
                {exp.achievements.map((item) => (
                  <li>{item}</li>
                ))}
              </ul>
            </div>
          )}
        </div>
      </div>
    ))}
  </div>
</section>

<script is:inline>
  document.addEventListener('DOMContentLoaded', function() {
    // Toggle experience details
    const toggleButtons = document.querySelectorAll('.toggle-details');
    
    toggleButtons.forEach(button => {
      button.addEventListener('click', function() {
        const targetId = this.getAttribute('data-target');
        const targetElement = document.getElementById(targetId);
        
        if (targetElement) {
          targetElement.classList.toggle('hidden');
          
          // Rotate arrow icon
          const svg = this.querySelector('svg');
          if (svg) {
            svg.classList.toggle('rotate-180');
          }
        }
      });
    });
  });
</script>

<style>
  .rotate-180 {
    transform: rotate(180deg);
  }
</style>
